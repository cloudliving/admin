extends ../../components/layout

block title
	title 新建政策宣传

block headQuote
	link(rel="stylesheet" href="../../stylus/policy.styl")

block side
	- var navActiveIndex = 5
	include ../../components/side

block main
	//  当前位置
	ul.location.list-unstyled.clearfix.mb20
		li.location-item.pull-left 政策宣传
		li.location-item.pull-left
			span.glyphicon.glyphicon-menu-right
			span.green 新建政策宣传

	// 表单
	form#app.form-horizontal
		.form-group
			.col-xs-1.control-label 标题
			.col-xs-6
				input.form-control(type="text" placeholder="输入标题")
			.col-xs-4.col-md-offset-1.text-center
				div.policy-file-thumb
					img.img-responsive(src="../../images/icon_pic.png" v-show="!imgBase64")
					img.img-responsive(:src="imgBase64" v-show="imgBase64")
					p.gray 图片预览
					p.gray(v-show="outdated") 您的浏览器不支持图片预览
		.form-group
			.col-xs-1.control-label 图片
			.col-xs-6
				.input-group.policy-file-wrap
					input.form-control(type="text" disabled v-model="imgName")
					span.input-group-btn
						button.btn.btn-success
							span.glyphicon.glyphicon-open
					input#file.policy-file-btn(type="file" @change="uploadImg($event)")
		.form-group
			.col-xs-1.control-label 排序
			.col-xs-6
				select.form-control
					option 排序
					option 排序
					option 排序
		.form-group
			.col-xs-1.control-label 链接
			.col-xs-6
				select.form-control
					option 为什么链接要用下拉框来选择
					option 为什么链接要用下拉框来选择
					option 为什么链接要用下拉框来选择
		.form-group
			.col-xs-1.control-label 状态
			.col-xs-6
				p
					label
						input.policy-upload-radio(type="radio" name="status" value="1" checked)
						| 启用
				p
					label
						input.policy-upload-radio(type="radio" name="status" value="0")
						| 禁用
		.form-group
			.col-xs-6.col-md-offset-1
				button(type="submit").btn.btn-success &nbsp;&nbsp;&nbsp;&nbsp;提交&nbsp;&nbsp;&nbsp;&nbsp;

block footQuote
	script(src="../../lib/js/vue.min.js")
	script.

		/**
		 * 上传图片，显示预览图逻辑
		 */

		!(function(){
			// 兼容性检测
			var reader = FileReader && new FileReader ()

			var vm = new Vue({
				el: '#app',
				data: {
					imgBase64: '',
					imgName: '',
					outdated: !reader
				}, 
				methods: {
					uploadImg: function (e) {
						var that = this
						var file = e.target.files[0]

						that.imgName = file.name

						if (reader) {
							reader.onload = function(e){
								that.imgBase64 = e.target.result
							}
							reader.readAsDataURL(file)
						}
					}
				}
			})       
		})()